# Traefik Service
services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network

  # Laravel Backend (Nginx + PHP)
  backend-php:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
      - ./php/local.ini:/usr/local/etc/php/conf.d/custom.ini
    depends_on:
      - db
      - redis
    environment:
      APP_ENV: ${APP_ENV}
      APP_URL: "api.${APP_URL}"
      APP_DEBUG: ${APP_DEBUG}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      NEWS_API_URL: ${NEWS_API_URL}
      NEWS_API_KEY: ${NEWS_API_KEY}
      BBC_API_URL: ${BBC_API_URL}
      BBC_API_KEY: ${BBC_API_KEY}
      NEW_YORK_API_URL: ${NEW_YORK_API_URL}
      NEW_YORK_API_KEY: ${NEW_YORK_API_KEY}
      THE_GUARDIAN_API_URL: ${THE_GUARDIAN_API_URL}
      THE_GUARDIAN_API_KEY: ${THE_GUARDIAN_API_KEY}
      THE_GUARDIAN_API_KEY_2: ${THE_GUARDIAN_API_KEY_2}
      THE_GUARDIAN_API_KEY_3: ${THE_GUARDIAN_API_KEY_3}
      THE_GUARDIAN_API_KEY_4: ${THE_GUARDIAN_API_KEY_4}
      DB_CONNECTION: ${DB_CONNECTION}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    networks:
      - app-network

  backend-nginx:
    image: nginx:latest
    volumes:
      - ./backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend-php
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=80"
    networks:
      - app-network

  # React Frontend
  frontend-react:
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
    environment:
      VITE_BACKEND_URL: "api.${APP_URL}"
    ports:
      - "5173:5173"
    volumes:
      - ./frontend-react:/usr/src/app
    labels:
      - "traefik.http.routers.frontend-react.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend-react.entrypoints=web"
      - "traefik.http.services.frontend-react.loadbalancer.server.port=5173"
    networks:
      - app-network

  # MySQL Database
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - app-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.rule=Host(`pma.${DOMAIN}`)
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80
    volumes:
      - ./php/local.ini:/usr/local/etc/php/conf.d/custom.ini

  # Redis Service
  redis:
    image: redis:6.2
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
